{"ast":null,"code":"var VanillaTilt = function () {\n  'use strict';\n\n  /**\n   * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\n   * Original idea: https://github.com/gijsroge/tilt.js\n   * MIT License.\n   * Version 1.8.0\n   */\n  class VanillaTilt {\n    constructor(element) {\n      let settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!(element instanceof Node)) {\n        throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\n      }\n      this.width = null;\n      this.height = null;\n      this.clientWidth = null;\n      this.clientHeight = null;\n      this.left = null;\n      this.top = null;\n\n      // for Gyroscope sampling\n      this.gammazero = null;\n      this.betazero = null;\n      this.lastgammazero = null;\n      this.lastbetazero = null;\n      this.transitionTimeout = null;\n      this.updateCall = null;\n      this.event = null;\n      this.updateBind = this.update.bind(this);\n      this.resetBind = this.reset.bind(this);\n      this.element = element;\n      this.settings = this.extendSettings(settings);\n      this.reverse = this.settings.reverse ? -1 : 1;\n      this.resetToStart = VanillaTilt.isSettingTrue(this.settings[\"reset-to-start\"]);\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n      this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n      this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\n      this.elementListener = this.getElementListener();\n      if (this.glare) {\n        this.prepareGlare();\n      }\n      if (this.fullPageListening) {\n        this.updateClientSize();\n      }\n      this.addEventListeners();\n      this.reset();\n      if (this.resetToStart === false) {\n        this.settings.startX = 0;\n        this.settings.startY = 0;\n      }\n    }\n    static isSettingTrue(setting) {\n      return setting === \"\" || setting === true || setting === 1;\n    }\n\n    /**\n     * Method returns element what will be listen mouse events\n     * @return {Node}\n     */\n    getElementListener() {\n      if (this.fullPageListening) {\n        return window.document;\n      }\n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n        const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n        if (mouseEventElement) {\n          return mouseEventElement;\n        }\n      }\n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\n        return this.settings[\"mouse-event-element\"];\n      }\n      return this.element;\n    }\n\n    /**\n     * Method set listen methods for this.elementListener\n     * @return {Node}\n     */\n    addEventListeners() {\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n      this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n      if (this.glare || this.fullPageListening) {\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\n      }\n      if (this.gyroscope) {\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n    }\n\n    /**\n     * Method remove event listeners from current this.elementListener\n     */\n    removeEventListeners() {\n      this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n      if (this.gyroscope) {\n        window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n      if (this.glare || this.fullPageListening) {\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\n      }\n    }\n    destroy() {\n      clearTimeout(this.transitionTimeout);\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.reset();\n      this.removeEventListeners();\n      this.element.vanillaTilt = null;\n      delete this.element.vanillaTilt;\n      this.element = null;\n    }\n    onDeviceOrientation(event) {\n      if (event.gamma === null || event.beta === null) {\n        return;\n      }\n      this.updateElementPosition();\n      if (this.gyroscopeSamples > 0) {\n        this.lastgammazero = this.gammazero;\n        this.lastbetazero = this.betazero;\n        if (this.gammazero === null) {\n          this.gammazero = event.gamma;\n          this.betazero = event.beta;\n        } else {\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\n          this.betazero = (event.beta + this.lastbetazero) / 2;\n        }\n        this.gyroscopeSamples -= 1;\n      }\n      const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n      const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n      const degreesPerPixelX = totalAngleX / this.width;\n      const degreesPerPixelY = totalAngleY / this.height;\n      const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n      const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n      const posX = angleX / degreesPerPixelX;\n      const posY = angleY / degreesPerPixelY;\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.event = {\n        clientX: posX + this.left,\n        clientY: posY + this.top\n      };\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n    onMouseEnter() {\n      this.updateElementPosition();\n      this.element.style.willChange = \"transform\";\n      this.setTransition();\n    }\n    onMouseMove(event) {\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.event = event;\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n    onMouseLeave() {\n      this.setTransition();\n      if (this.settings.reset) {\n        requestAnimationFrame(this.resetBind);\n      }\n    }\n    reset() {\n      this.onMouseEnter();\n      if (this.fullPageListening) {\n        this.event = {\n          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n        };\n      } else {\n        this.event = {\n          clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\n          clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\n        };\n      }\n      let backupScale = this.settings.scale;\n      this.settings.scale = 1;\n      this.update();\n      this.settings.scale = backupScale;\n      this.resetGlare();\n    }\n    resetGlare() {\n      if (this.glare) {\n        this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n        this.glareElement.style.opacity = \"0\";\n      }\n    }\n    getValues() {\n      let x, y;\n      if (this.fullPageListening) {\n        x = this.event.clientX / this.clientWidth;\n        y = this.event.clientY / this.clientHeight;\n      } else {\n        x = (this.event.clientX - this.left) / this.width;\n        y = (this.event.clientY - this.top) / this.height;\n      }\n      x = Math.min(Math.max(x, 0), 1);\n      y = Math.min(Math.max(y, 0), 1);\n      let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n      let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n      let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n      return {\n        tiltX: tiltX,\n        tiltY: tiltY,\n        percentageX: x * 100,\n        percentageY: y * 100,\n        angle: angle\n      };\n    }\n    updateElementPosition() {\n      let rect = this.element.getBoundingClientRect();\n      this.width = this.element.offsetWidth;\n      this.height = this.element.offsetHeight;\n      this.left = rect.left;\n      this.top = rect.top;\n    }\n    update() {\n      let values = this.getValues();\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n      if (this.glare) {\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n        this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n      }\n      this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n        \"detail\": values\n      }));\n      this.updateCall = null;\n    }\n\n    /**\n     * Appends the glare element (if glarePrerender equals false)\n     * and sets the default style\n     */\n    prepareGlare() {\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n      if (!this.glarePrerender) {\n        // Create glare element\n        const jsTiltGlare = document.createElement(\"div\");\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\n        const jsTiltGlareInner = document.createElement(\"div\");\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n        jsTiltGlare.appendChild(jsTiltGlareInner);\n        this.element.appendChild(jsTiltGlare);\n      }\n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n      if (this.glarePrerender) {\n        return;\n      }\n      Object.assign(this.glareElementWrapper.style, {\n        \"position\": \"absolute\",\n        \"top\": \"0\",\n        \"left\": \"0\",\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"overflow\": \"hidden\",\n        \"pointer-events\": \"none\",\n        \"border-radius\": \"inherit\"\n      });\n      Object.assign(this.glareElement.style, {\n        \"position\": \"absolute\",\n        \"top\": \"50%\",\n        \"left\": \"50%\",\n        \"pointer-events\": \"none\",\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n        \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n        \"transform-origin\": \"0% 0%\",\n        \"opacity\": \"0\"\n      });\n      this.updateGlareSize();\n    }\n    updateGlareSize() {\n      if (this.glare) {\n        const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n        Object.assign(this.glareElement.style, {\n          \"width\": `${glareSize}px`,\n          \"height\": `${glareSize}px`\n        });\n      }\n    }\n    updateClientSize() {\n      this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    }\n    onWindowResize() {\n      this.updateGlareSize();\n      this.updateClientSize();\n    }\n    setTransition() {\n      clearTimeout(this.transitionTimeout);\n      this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n      if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n      this.transitionTimeout = setTimeout(() => {\n        this.element.style.transition = \"\";\n        if (this.glare) {\n          this.glareElement.style.transition = \"\";\n        }\n      }, this.settings.speed);\n    }\n\n    /**\n     * Method return patched settings of instance\n     * @param {boolean} settings.reverse - reverse the tilt direction\n     * @param {number} settings.max - max tilt rotation (degrees)\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n     * @param {string} settings.easing - Easing on enter/exit\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n     * @param {number} settings.speed - Speed of the enter/exit transition\n     * @param {boolean} settings.transition - Set a transition on enter/exit\n     * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\n     * @param {boolean} settings.glare - if it should have a \"glare\" effect\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n     * @param {boolean} settings.reset-to-start - true = On reset event (mouse leave) will return to initial start angle (if startX or startY is set)\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n     */\n    extendSettings(settings) {\n      let defaultSettings = {\n        reverse: false,\n        max: 15,\n        startX: 0,\n        startY: 0,\n        perspective: 1000,\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\n        scale: 1,\n        speed: 300,\n        transition: true,\n        axis: null,\n        glare: false,\n        \"max-glare\": 1,\n        \"glare-prerender\": false,\n        \"full-page-listening\": false,\n        \"mouse-event-element\": null,\n        reset: true,\n        \"reset-to-start\": true,\n        gyroscope: true,\n        gyroscopeMinAngleX: -45,\n        gyroscopeMaxAngleX: 45,\n        gyroscopeMinAngleY: -45,\n        gyroscopeMaxAngleY: 45,\n        gyroscopeSamples: 10\n      };\n      let newSettings = {};\n      for (var property in defaultSettings) {\n        if (property in settings) {\n          newSettings[property] = settings[property];\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n          try {\n            newSettings[property] = JSON.parse(attribute);\n          } catch (e) {\n            newSettings[property] = attribute;\n          }\n        } else {\n          newSettings[property] = defaultSettings[property];\n        }\n      }\n      return newSettings;\n    }\n    static init(elements, settings) {\n      if (elements instanceof Node) {\n        elements = [elements];\n      }\n      if (elements instanceof NodeList) {\n        elements = [].slice.call(elements);\n      }\n      if (!(elements instanceof Array)) {\n        return;\n      }\n      elements.forEach(element => {\n        if (!(\"vanillaTilt\" in element)) {\n          element.vanillaTilt = new VanillaTilt(element, settings);\n        }\n      });\n    }\n  }\n  if (typeof document !== \"undefined\") {\n    /* expose the class to window */\n    window.VanillaTilt = VanillaTilt;\n\n    /**\n     * Auto load\n     */\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n  }\n  return VanillaTilt;\n}();","map":{"version":3,"names":["VanillaTilt","constructor","element","settings","arguments","length","undefined","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","resetToStart","isSettingTrue","glare","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","startX","startY","setting","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","angleX","angleY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","max","backupScale","scale","resetGlare","glareElement","transform","opacity","getValues","x","y","Math","min","tiltX","toFixed","tiltY","angle","atan2","PI","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","perspective","axis","dispatchEvent","CustomEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","updateGlareSize","glareSize","innerWidth","documentElement","body","innerHeight","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","init","elements","NodeList","slice","call","Array","forEach","querySelectorAll"],"sources":["/Users/nikkparasar/Documents/Personal Projects/apexperformance/src/vanilla-tilt.js"],"sourcesContent":["var VanillaTilt = (function () {\n  'use strict';\n  \n  /**\n   * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\n   * Original idea: https://github.com/gijsroge/tilt.js\n   * MIT License.\n   * Version 1.8.0\n   */\n  \n  class VanillaTilt {\n    constructor(element, settings = {}) {\n      if (!(element instanceof Node)) {\n        throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\n      }\n  \n      this.width = null;\n      this.height = null;\n      this.clientWidth = null;\n      this.clientHeight = null;\n      this.left = null;\n      this.top = null;\n  \n      // for Gyroscope sampling\n      this.gammazero = null;\n      this.betazero = null;\n      this.lastgammazero = null;\n      this.lastbetazero = null;\n  \n      this.transitionTimeout = null;\n      this.updateCall = null;\n      this.event = null;\n  \n      this.updateBind = this.update.bind(this);\n      this.resetBind = this.reset.bind(this);\n  \n      this.element = element;\n      this.settings = this.extendSettings(settings);\n  \n      this.reverse = this.settings.reverse ? -1 : 1;\n      this.resetToStart = VanillaTilt.isSettingTrue(this.settings[\"reset-to-start\"]);\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n      this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n      this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\n  \n      this.elementListener = this.getElementListener();\n  \n      if (this.glare) {\n        this.prepareGlare();\n      }\n  \n      if (this.fullPageListening) {\n        this.updateClientSize();\n      }\n  \n      this.addEventListeners();\n      this.reset();\n  \n      if (this.resetToStart === false) {\n        this.settings.startX = 0;\n        this.settings.startY = 0;\n      }\n    }\n  \n    static isSettingTrue(setting) {\n      return setting === \"\" || setting === true || setting === 1;\n    }\n  \n    /**\n     * Method returns element what will be listen mouse events\n     * @return {Node}\n     */\n    getElementListener() {\n      if (this.fullPageListening) {\n        return window.document;\n      }\n  \n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n        const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n  \n        if (mouseEventElement) {\n          return mouseEventElement;\n        }\n      }\n  \n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\n        return this.settings[\"mouse-event-element\"];\n      }\n  \n      return this.element;\n    }\n  \n    /**\n     * Method set listen methods for this.elementListener\n     * @return {Node}\n     */\n    addEventListeners() {\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n  \n      this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n  \n      if (this.glare || this.fullPageListening) {\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\n      }\n  \n      if (this.gyroscope) {\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n    }\n  \n    /**\n     * Method remove event listeners from current this.elementListener\n     */\n    removeEventListeners() {\n      this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n  \n      if (this.gyroscope) {\n        window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n  \n      if (this.glare || this.fullPageListening) {\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\n      }\n    }\n  \n    destroy() {\n      clearTimeout(this.transitionTimeout);\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n  \n      this.reset();\n  \n      this.removeEventListeners();\n      this.element.vanillaTilt = null;\n      delete this.element.vanillaTilt;\n  \n      this.element = null;\n    }\n  \n    onDeviceOrientation(event) {\n      if (event.gamma === null || event.beta === null) {\n        return;\n      }\n  \n      this.updateElementPosition();\n  \n      if (this.gyroscopeSamples > 0) {\n        this.lastgammazero = this.gammazero;\n        this.lastbetazero = this.betazero;\n  \n        if (this.gammazero === null) {\n          this.gammazero = event.gamma;\n          this.betazero = event.beta;\n        } else {\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\n          this.betazero = (event.beta + this.lastbetazero) / 2;\n        }\n  \n        this.gyroscopeSamples -= 1;\n      }\n  \n      const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n      const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n  \n      const degreesPerPixelX = totalAngleX / this.width;\n      const degreesPerPixelY = totalAngleY / this.height;\n  \n      const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n      const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n  \n      const posX = angleX / degreesPerPixelX;\n      const posY = angleY / degreesPerPixelY;\n  \n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n  \n      this.event = {\n        clientX: posX + this.left,\n        clientY: posY + this.top,\n      };\n  \n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n  \n    onMouseEnter() {\n      this.updateElementPosition();\n      this.element.style.willChange = \"transform\";\n      this.setTransition();\n    }\n  \n    onMouseMove(event) {\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n  \n      this.event = event;\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n  \n    onMouseLeave() {\n      this.setTransition();\n  \n      if (this.settings.reset) {\n        requestAnimationFrame(this.resetBind);\n      }\n    }\n  \n    reset() {\n      this.onMouseEnter();\n  \n      if (this.fullPageListening) {\n        this.event = {\n          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n        };\n      } else {\n        this.event = {\n          clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\n          clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\n        };\n      }\n  \n      let backupScale = this.settings.scale;\n      this.settings.scale = 1;\n      this.update();\n      this.settings.scale = backupScale;\n      this.resetGlare();\n    }\n  \n    resetGlare() {\n      if (this.glare) {\n        this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n        this.glareElement.style.opacity = \"0\";\n      }\n    }\n  \n    getValues() {\n      let x, y;\n  \n      if (this.fullPageListening) {\n        x = this.event.clientX / this.clientWidth;\n        y = this.event.clientY / this.clientHeight;\n      } else {\n        x = (this.event.clientX - this.left) / this.width;\n        y = (this.event.clientY - this.top) / this.height;\n      }\n  \n      x = Math.min(Math.max(x, 0), 1);\n      y = Math.min(Math.max(y, 0), 1);\n  \n      let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n      let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n      let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n  \n      return {\n        tiltX: tiltX,\n        tiltY: tiltY,\n        percentageX: x * 100,\n        percentageY: y * 100,\n        angle: angle\n      };\n    }\n  \n    updateElementPosition() {\n      let rect = this.element.getBoundingClientRect();\n  \n      this.width = this.element.offsetWidth;\n      this.height = this.element.offsetHeight;\n      this.left = rect.left;\n      this.top = rect.top;\n    }\n  \n    update() {\n      let values = this.getValues();\n  \n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\n        \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\n        \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\n        \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n  \n      if (this.glare) {\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n        this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n      }\n  \n      this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n        \"detail\": values\n      }));\n  \n      this.updateCall = null;\n    }\n  \n    /**\n     * Appends the glare element (if glarePrerender equals false)\n     * and sets the default style\n     */\n    prepareGlare() {\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n      if (!this.glarePrerender) {\n        // Create glare element\n        const jsTiltGlare = document.createElement(\"div\");\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\n  \n        const jsTiltGlareInner = document.createElement(\"div\");\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n  \n        jsTiltGlare.appendChild(jsTiltGlareInner);\n        this.element.appendChild(jsTiltGlare);\n      }\n  \n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n  \n      if (this.glarePrerender) {\n        return;\n      }\n  \n      Object.assign(this.glareElementWrapper.style, {\n        \"position\": \"absolute\",\n        \"top\": \"0\",\n        \"left\": \"0\",\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"overflow\": \"hidden\",\n        \"pointer-events\": \"none\",\n        \"border-radius\": \"inherit\"\n      });\n  \n      Object.assign(this.glareElement.style, {\n        \"position\": \"absolute\",\n        \"top\": \"50%\",\n        \"left\": \"50%\",\n        \"pointer-events\": \"none\",\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n        \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n        \"transform-origin\": \"0% 0%\",\n        \"opacity\": \"0\"\n      });\n  \n      this.updateGlareSize();\n    }\n  \n    updateGlareSize() {\n      if (this.glare) {\n        const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n  \n        Object.assign(this.glareElement.style, {\n          \"width\": `${glareSize}px`,\n          \"height\": `${glareSize}px`,\n        });\n      }\n    }\n  \n    updateClientSize() {\n      this.clientWidth = window.innerWidth\n        || document.documentElement.clientWidth\n        || document.body.clientWidth;\n  \n      this.clientHeight = window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    }\n  \n    onWindowResize() {\n      this.updateGlareSize();\n      this.updateClientSize();\n    }\n  \n    setTransition() {\n      clearTimeout(this.transitionTimeout);\n      this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n      if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n  \n      this.transitionTimeout = setTimeout(() => {\n        this.element.style.transition = \"\";\n        if (this.glare) {\n          this.glareElement.style.transition = \"\";\n        }\n      }, this.settings.speed);\n  \n    }\n  \n    /**\n     * Method return patched settings of instance\n     * @param {boolean} settings.reverse - reverse the tilt direction\n     * @param {number} settings.max - max tilt rotation (degrees)\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\n     * @param {string} settings.easing - Easing on enter/exit\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\n     * @param {number} settings.speed - Speed of the enter/exit transition\n     * @param {boolean} settings.transition - Set a transition on enter/exit\n     * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\n     * @param {boolean} settings.glare - if it should have a \"glare\" effect\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\n     * @param {boolean} settings.reset-to-start - true = On reset event (mouse leave) will return to initial start angle (if startX or startY is set)\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\n     */\n    extendSettings(settings) {\n      let defaultSettings = {\n        reverse: false,\n        max: 15,\n        startX: 0, \n        startY: 0,\n        perspective: 1000,\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\n        scale: 1, \n        speed: 300,\n        transition: true,\n        axis: null,\n        glare: false,\n        \"max-glare\": 1,\n        \"glare-prerender\": false,\n        \"full-page-listening\": false,\n        \"mouse-event-element\": null,\n        reset: true,\n        \"reset-to-start\": true,\n        gyroscope: true,\n        gyroscopeMinAngleX: -45,\n        gyroscopeMaxAngleX: 45,\n        gyroscopeMinAngleY: -45,\n        gyroscopeMaxAngleY: 45,\n        gyroscopeSamples: 10\n      };\n  \n      let newSettings = {};\n      for (var property in defaultSettings) {\n        if (property in settings) {\n          newSettings[property] = settings[property];\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n          try {\n            newSettings[property] = JSON.parse(attribute);\n          } catch (e) {\n            newSettings[property] = attribute;\n          }\n  \n        } else {\n          newSettings[property] = defaultSettings[property];\n        }\n      }\n  \n      return newSettings;\n    }\n  \n    static init(elements, settings) {\n      if (elements instanceof Node) {\n        elements = [elements];\n      }\n  \n      if (elements instanceof NodeList) {\n        elements = [].slice.call(elements);\n      }\n  \n      if (!(elements instanceof Array)) {\n        return;\n      }\n  \n      elements.forEach((element) => {\n        if (!(\"vanillaTilt\" in element)) {\n          element.vanillaTilt = new VanillaTilt(element, settings);\n        }\n      });\n    }\n  }\n  \n  if (typeof document !== \"undefined\") {\n    /* expose the class to window */\n    window.VanillaTilt = VanillaTilt;\n  \n    /**\n     * Auto load\n     */\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n  }\n  \n  return VanillaTilt;\n  \n  }());"],"mappings":"AAAA,IAAIA,WAAW,GAAI,YAAY;EAC7B,YAAY;;EAEZ;AACF;AACA;AACA;AACA;AACA;EAEE,MAAMA,WAAW,CAAC;IAChBC,WAAWA,CAACC,OAAO,EAAiB;MAAA,IAAfC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAChC,IAAI,EAAEF,OAAO,YAAYK,IAAI,CAAC,EAAE;QAC9B,MAAO,uCAAuC,GAAGL,OAAO,GAAG,iBAAiB;MAC9E;MAEA,IAAI,CAACM,KAAK,GAAG,IAAI;MACjB,IAAI,CAACC,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,IAAI,GAAG,IAAI;MAChB,IAAI,CAACC,GAAG,GAAG,IAAI;;MAEf;MACA,IAAI,CAACC,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,aAAa,GAAG,IAAI;MACzB,IAAI,CAACC,YAAY,GAAG,IAAI;MAExB,IAAI,CAACC,iBAAiB,GAAG,IAAI;MAC7B,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI;MAEjB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;MACxC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,IAAI,CAAC;MAEtC,IAAI,CAACrB,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACuB,cAAc,CAACvB,QAAQ,CAAC;MAE7C,IAAI,CAACwB,OAAO,GAAG,IAAI,CAACxB,QAAQ,CAACwB,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;MAC7C,IAAI,CAACC,YAAY,GAAG5B,WAAW,CAAC6B,aAAa,CAAC,IAAI,CAAC1B,QAAQ,CAAC,gBAAgB,CAAC,CAAC;MAC9E,IAAI,CAAC2B,KAAK,GAAG9B,WAAW,CAAC6B,aAAa,CAAC,IAAI,CAAC1B,QAAQ,CAAC2B,KAAK,CAAC;MAC3D,IAAI,CAACC,cAAc,GAAG/B,WAAW,CAAC6B,aAAa,CAAC,IAAI,CAAC1B,QAAQ,CAAC,iBAAiB,CAAC,CAAC;MACjF,IAAI,CAAC6B,iBAAiB,GAAGhC,WAAW,CAAC6B,aAAa,CAAC,IAAI,CAAC1B,QAAQ,CAAC,qBAAqB,CAAC,CAAC;MACxF,IAAI,CAAC8B,SAAS,GAAGjC,WAAW,CAAC6B,aAAa,CAAC,IAAI,CAAC1B,QAAQ,CAAC8B,SAAS,CAAC;MACnE,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAC/B,QAAQ,CAAC+B,gBAAgB;MAEtD,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,kBAAkB,EAAE;MAEhD,IAAI,IAAI,CAACN,KAAK,EAAE;QACd,IAAI,CAACO,YAAY,EAAE;MACrB;MAEA,IAAI,IAAI,CAACL,iBAAiB,EAAE;QAC1B,IAAI,CAACM,gBAAgB,EAAE;MACzB;MAEA,IAAI,CAACC,iBAAiB,EAAE;MACxB,IAAI,CAACd,KAAK,EAAE;MAEZ,IAAI,IAAI,CAACG,YAAY,KAAK,KAAK,EAAE;QAC/B,IAAI,CAACzB,QAAQ,CAACqC,MAAM,GAAG,CAAC;QACxB,IAAI,CAACrC,QAAQ,CAACsC,MAAM,GAAG,CAAC;MAC1B;IACF;IAEA,OAAOZ,aAAaA,CAACa,OAAO,EAAE;MAC5B,OAAOA,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,CAAC;IAC5D;;IAEA;AACJ;AACA;AACA;IACIN,kBAAkBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACJ,iBAAiB,EAAE;QAC1B,OAAOW,MAAM,CAACC,QAAQ;MACxB;MAEA,IAAI,OAAO,IAAI,CAACzC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,QAAQ,EAAE;QAC5D,MAAM0C,iBAAiB,GAAGD,QAAQ,CAACE,aAAa,CAAC,IAAI,CAAC3C,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAEtF,IAAI0C,iBAAiB,EAAE;UACrB,OAAOA,iBAAiB;QAC1B;MACF;MAEA,IAAI,IAAI,CAAC1C,QAAQ,CAAC,qBAAqB,CAAC,YAAYI,IAAI,EAAE;QACxD,OAAO,IAAI,CAACJ,QAAQ,CAAC,qBAAqB,CAAC;MAC7C;MAEA,OAAO,IAAI,CAACD,OAAO;IACrB;;IAEA;AACJ;AACA;AACA;IACIqC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACQ,gBAAgB,GAAG,IAAI,CAACC,YAAY,CAACzB,IAAI,CAAC,IAAI,CAAC;MACpD,IAAI,CAAC0B,eAAe,GAAG,IAAI,CAACC,WAAW,CAAC3B,IAAI,CAAC,IAAI,CAAC;MAClD,IAAI,CAAC4B,gBAAgB,GAAG,IAAI,CAACC,YAAY,CAAC7B,IAAI,CAAC,IAAI,CAAC;MACpD,IAAI,CAAC8B,kBAAkB,GAAG,IAAI,CAACC,cAAc,CAAC/B,IAAI,CAAC,IAAI,CAAC;MACxD,IAAI,CAACgC,uBAAuB,GAAG,IAAI,CAACC,mBAAmB,CAACjC,IAAI,CAAC,IAAI,CAAC;MAElE,IAAI,CAACY,eAAe,CAACsB,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACV,gBAAgB,CAAC;MAC1E,IAAI,CAACZ,eAAe,CAACsB,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACN,gBAAgB,CAAC;MAC1E,IAAI,CAAChB,eAAe,CAACsB,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACR,eAAe,CAAC;MAExE,IAAI,IAAI,CAACnB,KAAK,IAAI,IAAI,CAACE,iBAAiB,EAAE;QACxCW,MAAM,CAACc,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACJ,kBAAkB,CAAC;MAC5D;MAEA,IAAI,IAAI,CAACpB,SAAS,EAAE;QAClBU,MAAM,CAACc,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAACF,uBAAuB,CAAC;MAC5E;IACF;;IAEA;AACJ;AACA;IACIG,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACvB,eAAe,CAACwB,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACZ,gBAAgB,CAAC;MAC7E,IAAI,CAACZ,eAAe,CAACwB,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACR,gBAAgB,CAAC;MAC7E,IAAI,CAAChB,eAAe,CAACwB,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACV,eAAe,CAAC;MAE3E,IAAI,IAAI,CAAChB,SAAS,EAAE;QAClBU,MAAM,CAACgB,mBAAmB,CAAC,mBAAmB,EAAE,IAAI,CAACJ,uBAAuB,CAAC;MAC/E;MAEA,IAAI,IAAI,CAACzB,KAAK,IAAI,IAAI,CAACE,iBAAiB,EAAE;QACxCW,MAAM,CAACgB,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACN,kBAAkB,CAAC;MAC/D;IACF;IAEAO,OAAOA,CAAA,EAAG;MACRC,YAAY,CAAC,IAAI,CAAC3C,iBAAiB,CAAC;MACpC,IAAI,IAAI,CAACC,UAAU,KAAK,IAAI,EAAE;QAC5B2C,oBAAoB,CAAC,IAAI,CAAC3C,UAAU,CAAC;MACvC;MAEA,IAAI,CAACM,KAAK,EAAE;MAEZ,IAAI,CAACiC,oBAAoB,EAAE;MAC3B,IAAI,CAACxD,OAAO,CAAC6D,WAAW,GAAG,IAAI;MAC/B,OAAO,IAAI,CAAC7D,OAAO,CAAC6D,WAAW;MAE/B,IAAI,CAAC7D,OAAO,GAAG,IAAI;IACrB;IAEAsD,mBAAmBA,CAACpC,KAAK,EAAE;MACzB,IAAIA,KAAK,CAAC4C,KAAK,KAAK,IAAI,IAAI5C,KAAK,CAAC6C,IAAI,KAAK,IAAI,EAAE;QAC/C;MACF;MAEA,IAAI,CAACC,qBAAqB,EAAE;MAE5B,IAAI,IAAI,CAAChC,gBAAgB,GAAG,CAAC,EAAE;QAC7B,IAAI,CAAClB,aAAa,GAAG,IAAI,CAACF,SAAS;QACnC,IAAI,CAACG,YAAY,GAAG,IAAI,CAACF,QAAQ;QAEjC,IAAI,IAAI,CAACD,SAAS,KAAK,IAAI,EAAE;UAC3B,IAAI,CAACA,SAAS,GAAGM,KAAK,CAAC4C,KAAK;UAC5B,IAAI,CAACjD,QAAQ,GAAGK,KAAK,CAAC6C,IAAI;QAC5B,CAAC,MAAM;UACL,IAAI,CAACnD,SAAS,GAAG,CAACM,KAAK,CAAC4C,KAAK,GAAG,IAAI,CAAChD,aAAa,IAAI,CAAC;UACvD,IAAI,CAACD,QAAQ,GAAG,CAACK,KAAK,CAAC6C,IAAI,GAAG,IAAI,CAAChD,YAAY,IAAI,CAAC;QACtD;QAEA,IAAI,CAACiB,gBAAgB,IAAI,CAAC;MAC5B;MAEA,MAAMiC,WAAW,GAAG,IAAI,CAAChE,QAAQ,CAACiE,kBAAkB,GAAG,IAAI,CAACjE,QAAQ,CAACkE,kBAAkB;MACvF,MAAMC,WAAW,GAAG,IAAI,CAACnE,QAAQ,CAACoE,kBAAkB,GAAG,IAAI,CAACpE,QAAQ,CAACqE,kBAAkB;MAEvF,MAAMC,gBAAgB,GAAGN,WAAW,GAAG,IAAI,CAAC3D,KAAK;MACjD,MAAMkE,gBAAgB,GAAGJ,WAAW,GAAG,IAAI,CAAC7D,MAAM;MAElD,MAAMkE,MAAM,GAAGvD,KAAK,CAAC4C,KAAK,IAAI,IAAI,CAAC7D,QAAQ,CAACkE,kBAAkB,GAAG,IAAI,CAACvD,SAAS,CAAC;MAChF,MAAM8D,MAAM,GAAGxD,KAAK,CAAC6C,IAAI,IAAI,IAAI,CAAC9D,QAAQ,CAACqE,kBAAkB,GAAG,IAAI,CAACzD,QAAQ,CAAC;MAE9E,MAAM8D,IAAI,GAAGF,MAAM,GAAGF,gBAAgB;MACtC,MAAMK,IAAI,GAAGF,MAAM,GAAGF,gBAAgB;MAEtC,IAAI,IAAI,CAACvD,UAAU,KAAK,IAAI,EAAE;QAC5B2C,oBAAoB,CAAC,IAAI,CAAC3C,UAAU,CAAC;MACvC;MAEA,IAAI,CAACC,KAAK,GAAG;QACX2D,OAAO,EAAEF,IAAI,GAAG,IAAI,CAACjE,IAAI;QACzBoE,OAAO,EAAEF,IAAI,GAAG,IAAI,CAACjE;MACvB,CAAC;MAED,IAAI,CAACM,UAAU,GAAG8D,qBAAqB,CAAC,IAAI,CAAC5D,UAAU,CAAC;IAC1D;IAEA2B,YAAYA,CAAA,EAAG;MACb,IAAI,CAACkB,qBAAqB,EAAE;MAC5B,IAAI,CAAChE,OAAO,CAACgF,KAAK,CAACC,UAAU,GAAG,WAAW;MAC3C,IAAI,CAACC,aAAa,EAAE;IACtB;IAEAlC,WAAWA,CAAC9B,KAAK,EAAE;MACjB,IAAI,IAAI,CAACD,UAAU,KAAK,IAAI,EAAE;QAC5B2C,oBAAoB,CAAC,IAAI,CAAC3C,UAAU,CAAC;MACvC;MAEA,IAAI,CAACC,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACD,UAAU,GAAG8D,qBAAqB,CAAC,IAAI,CAAC5D,UAAU,CAAC;IAC1D;IAEA+B,YAAYA,CAAA,EAAG;MACb,IAAI,CAACgC,aAAa,EAAE;MAEpB,IAAI,IAAI,CAACjF,QAAQ,CAACsB,KAAK,EAAE;QACvBwD,qBAAqB,CAAC,IAAI,CAACzD,SAAS,CAAC;MACvC;IACF;IAEAC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACuB,YAAY,EAAE;MAEnB,IAAI,IAAI,CAAChB,iBAAiB,EAAE;QAC1B,IAAI,CAACZ,KAAK,GAAG;UACX2D,OAAO,EAAE,CAAC,IAAI,CAAC5E,QAAQ,CAACqC,MAAM,GAAG,IAAI,CAACrC,QAAQ,CAACkF,GAAG,KAAK,CAAC,GAAG,IAAI,CAAClF,QAAQ,CAACkF,GAAG,CAAC,GAAG,IAAI,CAAC3E,WAAW;UAChGsE,OAAO,EAAE,CAAC,IAAI,CAAC7E,QAAQ,CAACsC,MAAM,GAAG,IAAI,CAACtC,QAAQ,CAACkF,GAAG,KAAK,CAAC,GAAG,IAAI,CAAClF,QAAQ,CAACkF,GAAG,CAAC,GAAG,IAAI,CAAC1E;QACvF,CAAC;MACH,CAAC,MAAM;QACL,IAAI,CAACS,KAAK,GAAG;UACX2D,OAAO,EAAE,IAAI,CAACnE,IAAI,GAAI,CAAC,IAAI,CAACT,QAAQ,CAACqC,MAAM,GAAG,IAAI,CAACrC,QAAQ,CAACkF,GAAG,KAAK,CAAC,GAAG,IAAI,CAAClF,QAAQ,CAACkF,GAAG,CAAC,GAAG,IAAI,CAAC7E,KAAM;UACxGwE,OAAO,EAAE,IAAI,CAACnE,GAAG,GAAI,CAAC,IAAI,CAACV,QAAQ,CAACsC,MAAM,GAAG,IAAI,CAACtC,QAAQ,CAACkF,GAAG,KAAK,CAAC,GAAG,IAAI,CAAClF,QAAQ,CAACkF,GAAG,CAAC,GAAG,IAAI,CAAC5E;QACnG,CAAC;MACH;MAEA,IAAI6E,WAAW,GAAG,IAAI,CAACnF,QAAQ,CAACoF,KAAK;MACrC,IAAI,CAACpF,QAAQ,CAACoF,KAAK,GAAG,CAAC;MACvB,IAAI,CAACjE,MAAM,EAAE;MACb,IAAI,CAACnB,QAAQ,CAACoF,KAAK,GAAGD,WAAW;MACjC,IAAI,CAACE,UAAU,EAAE;IACnB;IAEAA,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAAC1D,KAAK,EAAE;QACd,IAAI,CAAC2D,YAAY,CAACP,KAAK,CAACQ,SAAS,GAAG,sCAAsC;QAC1E,IAAI,CAACD,YAAY,CAACP,KAAK,CAACS,OAAO,GAAG,GAAG;MACvC;IACF;IAEAC,SAASA,CAAA,EAAG;MACV,IAAIC,CAAC,EAAEC,CAAC;MAER,IAAI,IAAI,CAAC9D,iBAAiB,EAAE;QAC1B6D,CAAC,GAAG,IAAI,CAACzE,KAAK,CAAC2D,OAAO,GAAG,IAAI,CAACrE,WAAW;QACzCoF,CAAC,GAAG,IAAI,CAAC1E,KAAK,CAAC4D,OAAO,GAAG,IAAI,CAACrE,YAAY;MAC5C,CAAC,MAAM;QACLkF,CAAC,GAAG,CAAC,IAAI,CAACzE,KAAK,CAAC2D,OAAO,GAAG,IAAI,CAACnE,IAAI,IAAI,IAAI,CAACJ,KAAK;QACjDsF,CAAC,GAAG,CAAC,IAAI,CAAC1E,KAAK,CAAC4D,OAAO,GAAG,IAAI,CAACnE,GAAG,IAAI,IAAI,CAACJ,MAAM;MACnD;MAEAoF,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACV,GAAG,CAACQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC/BC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACV,GAAG,CAACS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAE/B,IAAIG,KAAK,GAAG,CAAC,IAAI,CAACtE,OAAO,IAAI,IAAI,CAACxB,QAAQ,CAACkF,GAAG,GAAGQ,CAAC,GAAG,IAAI,CAAC1F,QAAQ,CAACkF,GAAG,GAAG,CAAC,CAAC,EAAEa,OAAO,CAAC,CAAC,CAAC;MACvF,IAAIC,KAAK,GAAG,CAAC,IAAI,CAACxE,OAAO,IAAImE,CAAC,GAAG,IAAI,CAAC3F,QAAQ,CAACkF,GAAG,GAAG,CAAC,GAAG,IAAI,CAAClF,QAAQ,CAACkF,GAAG,CAAC,EAAEa,OAAO,CAAC,CAAC,CAAC;MACvF,IAAIE,KAAK,GAAGL,IAAI,CAACM,KAAK,CAAC,IAAI,CAACjF,KAAK,CAAC2D,OAAO,IAAI,IAAI,CAACnE,IAAI,GAAG,IAAI,CAACJ,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAACY,KAAK,CAAC4D,OAAO,IAAI,IAAI,CAACnE,GAAG,GAAG,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAGsF,IAAI,CAACO,EAAE,CAAC;MAEjJ,OAAO;QACLL,KAAK,EAAEA,KAAK;QACZE,KAAK,EAAEA,KAAK;QACZI,WAAW,EAAEV,CAAC,GAAG,GAAG;QACpBW,WAAW,EAAEV,CAAC,GAAG,GAAG;QACpBM,KAAK,EAAEA;MACT,CAAC;IACH;IAEAlC,qBAAqBA,CAAA,EAAG;MACtB,IAAIuC,IAAI,GAAG,IAAI,CAACvG,OAAO,CAACwG,qBAAqB,EAAE;MAE/C,IAAI,CAAClG,KAAK,GAAG,IAAI,CAACN,OAAO,CAACyG,WAAW;MACrC,IAAI,CAAClG,MAAM,GAAG,IAAI,CAACP,OAAO,CAAC0G,YAAY;MACvC,IAAI,CAAChG,IAAI,GAAG6F,IAAI,CAAC7F,IAAI;MACrB,IAAI,CAACC,GAAG,GAAG4F,IAAI,CAAC5F,GAAG;IACrB;IAEAS,MAAMA,CAAA,EAAG;MACP,IAAIuF,MAAM,GAAG,IAAI,CAACjB,SAAS,EAAE;MAE7B,IAAI,CAAC1F,OAAO,CAACgF,KAAK,CAACQ,SAAS,GAAG,cAAc,GAAG,IAAI,CAACvF,QAAQ,CAAC2G,WAAW,GAAG,MAAM,GAChF,UAAU,IAAI,IAAI,CAAC3G,QAAQ,CAAC4G,IAAI,KAAK,GAAG,GAAG,CAAC,GAAGF,MAAM,CAACV,KAAK,CAAC,GAAG,OAAO,GACtE,UAAU,IAAI,IAAI,CAAChG,QAAQ,CAAC4G,IAAI,KAAK,GAAG,GAAG,CAAC,GAAGF,MAAM,CAACZ,KAAK,CAAC,GAAG,OAAO,GACtE,UAAU,GAAG,IAAI,CAAC9F,QAAQ,CAACoF,KAAK,GAAG,IAAI,GAAG,IAAI,CAACpF,QAAQ,CAACoF,KAAK,GAAG,IAAI,GAAG,IAAI,CAACpF,QAAQ,CAACoF,KAAK,GAAG,GAAG;MAElG,IAAI,IAAI,CAACzD,KAAK,EAAE;QACd,IAAI,CAAC2D,YAAY,CAACP,KAAK,CAACQ,SAAS,GAAI,UAASmB,MAAM,CAACT,KAAM,4BAA2B;QACtF,IAAI,CAACX,YAAY,CAACP,KAAK,CAACS,OAAO,GAAI,GAAEkB,MAAM,CAACL,WAAW,GAAG,IAAI,CAACrG,QAAQ,CAAC,WAAW,CAAC,GAAG,GAAI,EAAC;MAC9F;MAEA,IAAI,CAACD,OAAO,CAAC8G,aAAa,CAAC,IAAIC,WAAW,CAAC,YAAY,EAAE;QACvD,QAAQ,EAAEJ;MACZ,CAAC,CAAC,CAAC;MAEH,IAAI,CAAC1F,UAAU,GAAG,IAAI;IACxB;;IAEA;AACJ;AACA;AACA;IACIkB,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAAC,IAAI,CAACN,cAAc,EAAE;QACxB;QACA,MAAMmF,WAAW,GAAGtE,QAAQ,CAACuE,aAAa,CAAC,KAAK,CAAC;QACjDD,WAAW,CAACE,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;QAE1C,MAAMC,gBAAgB,GAAG1E,QAAQ,CAACuE,aAAa,CAAC,KAAK,CAAC;QACtDG,gBAAgB,CAACF,SAAS,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAErDH,WAAW,CAACK,WAAW,CAACD,gBAAgB,CAAC;QACzC,IAAI,CAACpH,OAAO,CAACqH,WAAW,CAACL,WAAW,CAAC;MACvC;MAEA,IAAI,CAACM,mBAAmB,GAAG,IAAI,CAACtH,OAAO,CAAC4C,aAAa,CAAC,gBAAgB,CAAC;MACvE,IAAI,CAAC2C,YAAY,GAAG,IAAI,CAACvF,OAAO,CAAC4C,aAAa,CAAC,sBAAsB,CAAC;MAEtE,IAAI,IAAI,CAACf,cAAc,EAAE;QACvB;MACF;MAEA0F,MAAM,CAACC,MAAM,CAAC,IAAI,CAACF,mBAAmB,CAACtC,KAAK,EAAE;QAC5C,UAAU,EAAE,UAAU;QACtB,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,MAAM;QACf,QAAQ,EAAE,MAAM;QAChB,UAAU,EAAE,QAAQ;QACpB,gBAAgB,EAAE,MAAM;QACxB,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFuC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACjC,YAAY,CAACP,KAAK,EAAE;QACrC,UAAU,EAAE,UAAU;QACtB,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,KAAK;QACb,gBAAgB,EAAE,MAAM;QACxB,kBAAkB,EAAG,yEAAwE;QAC7F,WAAW,EAAE,sCAAsC;QACnD,kBAAkB,EAAE,OAAO;QAC3B,SAAS,EAAE;MACb,CAAC,CAAC;MAEF,IAAI,CAACyC,eAAe,EAAE;IACxB;IAEAA,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAC7F,KAAK,EAAE;QACd,MAAM8F,SAAS,GAAG,CAAC,IAAI,CAAC1H,OAAO,CAACyG,WAAW,GAAG,IAAI,CAACzG,OAAO,CAAC0G,YAAY,GAAG,IAAI,CAAC1G,OAAO,CAACyG,WAAW,GAAG,IAAI,CAACzG,OAAO,CAAC0G,YAAY,IAAI,CAAC;QAEnIa,MAAM,CAACC,MAAM,CAAC,IAAI,CAACjC,YAAY,CAACP,KAAK,EAAE;UACrC,OAAO,EAAG,GAAE0C,SAAU,IAAG;UACzB,QAAQ,EAAG,GAAEA,SAAU;QACzB,CAAC,CAAC;MACJ;IACF;IAEAtF,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC5B,WAAW,GAAGiC,MAAM,CAACkF,UAAU,IAC/BjF,QAAQ,CAACkF,eAAe,CAACpH,WAAW,IACpCkC,QAAQ,CAACmF,IAAI,CAACrH,WAAW;MAE9B,IAAI,CAACC,YAAY,GAAGgC,MAAM,CAACqF,WAAW,IACjCpF,QAAQ,CAACkF,eAAe,CAACnH,YAAY,IACrCiC,QAAQ,CAACmF,IAAI,CAACpH,YAAY;IACjC;IAEA2C,cAAcA,CAAA,EAAG;MACf,IAAI,CAACqE,eAAe,EAAE;MACtB,IAAI,CAACrF,gBAAgB,EAAE;IACzB;IAEA8C,aAAaA,CAAA,EAAG;MACdvB,YAAY,CAAC,IAAI,CAAC3C,iBAAiB,CAAC;MACpC,IAAI,CAAChB,OAAO,CAACgF,KAAK,CAAC+C,UAAU,GAAG,IAAI,CAAC9H,QAAQ,CAAC+H,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC/H,QAAQ,CAACgI,MAAM;MAClF,IAAI,IAAI,CAACrG,KAAK,EAAE,IAAI,CAAC2D,YAAY,CAACP,KAAK,CAAC+C,UAAU,GAAI,WAAU,IAAI,CAAC9H,QAAQ,CAAC+H,KAAM,MAAK,IAAI,CAAC/H,QAAQ,CAACgI,MAAO,EAAC;MAE/G,IAAI,CAACjH,iBAAiB,GAAGkH,UAAU,CAAC,MAAM;QACxC,IAAI,CAAClI,OAAO,CAACgF,KAAK,CAAC+C,UAAU,GAAG,EAAE;QAClC,IAAI,IAAI,CAACnG,KAAK,EAAE;UACd,IAAI,CAAC2D,YAAY,CAACP,KAAK,CAAC+C,UAAU,GAAG,EAAE;QACzC;MACF,CAAC,EAAE,IAAI,CAAC9H,QAAQ,CAAC+H,KAAK,CAAC;IAEzB;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIxG,cAAcA,CAACvB,QAAQ,EAAE;MACvB,IAAIkI,eAAe,GAAG;QACpB1G,OAAO,EAAE,KAAK;QACd0D,GAAG,EAAE,EAAE;QACP7C,MAAM,EAAE,CAAC;QACTC,MAAM,EAAE,CAAC;QACTqE,WAAW,EAAE,IAAI;QACjBqB,MAAM,EAAE,+BAA+B;QACvC5C,KAAK,EAAE,CAAC;QACR2C,KAAK,EAAE,GAAG;QACVD,UAAU,EAAE,IAAI;QAChBlB,IAAI,EAAE,IAAI;QACVjF,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,CAAC;QACd,iBAAiB,EAAE,KAAK;QACxB,qBAAqB,EAAE,KAAK;QAC5B,qBAAqB,EAAE,IAAI;QAC3BL,KAAK,EAAE,IAAI;QACX,gBAAgB,EAAE,IAAI;QACtBQ,SAAS,EAAE,IAAI;QACfoC,kBAAkB,EAAE,CAAC,EAAE;QACvBD,kBAAkB,EAAE,EAAE;QACtBI,kBAAkB,EAAE,CAAC,EAAE;QACvBD,kBAAkB,EAAE,EAAE;QACtBrC,gBAAgB,EAAE;MACpB,CAAC;MAED,IAAIoG,WAAW,GAAG,CAAC,CAAC;MACpB,KAAK,IAAIC,QAAQ,IAAIF,eAAe,EAAE;QACpC,IAAIE,QAAQ,IAAIpI,QAAQ,EAAE;UACxBmI,WAAW,CAACC,QAAQ,CAAC,GAAGpI,QAAQ,CAACoI,QAAQ,CAAC;QAC5C,CAAC,MAAM,IAAI,IAAI,CAACrI,OAAO,CAACsI,YAAY,CAAC,YAAY,GAAGD,QAAQ,CAAC,EAAE;UAC7D,IAAIE,SAAS,GAAG,IAAI,CAACvI,OAAO,CAACwI,YAAY,CAAC,YAAY,GAAGH,QAAQ,CAAC;UAClE,IAAI;YACFD,WAAW,CAACC,QAAQ,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC;UAC/C,CAAC,CAAC,OAAOI,CAAC,EAAE;YACVP,WAAW,CAACC,QAAQ,CAAC,GAAGE,SAAS;UACnC;QAEF,CAAC,MAAM;UACLH,WAAW,CAACC,QAAQ,CAAC,GAAGF,eAAe,CAACE,QAAQ,CAAC;QACnD;MACF;MAEA,OAAOD,WAAW;IACpB;IAEA,OAAOQ,IAAIA,CAACC,QAAQ,EAAE5I,QAAQ,EAAE;MAC9B,IAAI4I,QAAQ,YAAYxI,IAAI,EAAE;QAC5BwI,QAAQ,GAAG,CAACA,QAAQ,CAAC;MACvB;MAEA,IAAIA,QAAQ,YAAYC,QAAQ,EAAE;QAChCD,QAAQ,GAAG,EAAE,CAACE,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC;MACpC;MAEA,IAAI,EAAEA,QAAQ,YAAYI,KAAK,CAAC,EAAE;QAChC;MACF;MAEAJ,QAAQ,CAACK,OAAO,CAAElJ,OAAO,IAAK;QAC5B,IAAI,EAAE,aAAa,IAAIA,OAAO,CAAC,EAAE;UAC/BA,OAAO,CAAC6D,WAAW,GAAG,IAAI/D,WAAW,CAACE,OAAO,EAAEC,QAAQ,CAAC;QAC1D;MACF,CAAC,CAAC;IACJ;EACF;EAEA,IAAI,OAAOyC,QAAQ,KAAK,WAAW,EAAE;IACnC;IACAD,MAAM,CAAC3C,WAAW,GAAGA,WAAW;;IAEhC;AACJ;AACA;IACIA,WAAW,CAAC8I,IAAI,CAAClG,QAAQ,CAACyG,gBAAgB,CAAC,aAAa,CAAC,CAAC;EAC5D;EAEA,OAAOrJ,WAAW;AAElB,CAAC,EAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}